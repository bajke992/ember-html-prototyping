<div class="property-inspector">

    <div class="property-body">
        <header class="label-title inspector-tabs">
            <div {{ bind-attr class=":inspector-tab isElementSelected:active" }} {{action 'showElement'}}>Element</div>
            <div {{ bind-attr class=":inspector-tab isEventsSelected:active" }} {{action 'showEvents'}}>Events</div>
        </header>

        {{#if isElementSelected}}

            <header class="sub-label" {{action 'toggleObj'}}>Object: {{props.type}}</header>
            {{#if isObjExpanded}}
                <ul class="options-list">
                    <li>ID {{ props.recordId }}</li>
                    <li>Name {{view Ember.TextField valueBinding="props.text" action="updateText" }}</li>
                    {{#if isBtn}}
                        <li><label>URL</label> {{view Ember.TextField valueBinding="props.URL" action="updateURL"}}</li>
                    {{/if}}
                    {{#if isText}}
                        <li><label>URL</label> {{view Ember.TextField valueBinding="props.URL" action="updateURL"}}</li>
                    {{/if}}
                    {{#if isInput}}
                        <li><label>Placeholder</label> {{view Ember.TextField valueBinding="props.placeholder" action="updatePlaceholder"}}</li>
                        <li>Lines
                           {{view Ember.Select
                               content=modes
                               optionValuePath="content.mode"
                               optionLabelPath="content.title"
                               value=props.mode}}
                        </li>
                    {{/if}}
                </ul>
            {{/if}}


            <header class="sub-label" {{action 'toggleAttr'}}>Attributes</header>
            {{#if isAttrExpanded}}
                <ul class="options-list">
                    <li><label>Width</label> {{view Ember.TextField valueBinding="props.width" action="updateWidth" type="number"}}</li>
                    <li><label>Height</label> {{view Ember.TextField valueBinding="props.height" action="updateHeight" type="number"}}</li>
                    <li><label>x-pos</label> {{view Ember.TextField valueBinding="props.x_pos" action="updateX" type="number"}}</li>
                    <li><label>y-pos</label> {{view Ember.TextField valueBinding="props.y_pos" action="updateY" type="number"}}</li>
                    <li><label>Hint</label> {{view Ember.TextField valueBinding="props.hint" action="updateHint"}}</li>
                    <li><label>Stack Index</label> {{view Ember.TextField valueBinding="props.stack" action="updateStack" type="number"}}</li>
                </ul>
            {{/if}}

            <header class="sub-label" {{action 'toggleStyle'}}>Style</header>
            {{#if isStyleExpanded}}
                <ul class="options-list">
                    <li class="toggle"><span {{action 'toggleFont'}} class="inner-toggle"><span class="font">Font</span><span class="caret"></span></span>
                        {{#if isFontExpanded}}
                            <ul>
                                <li><label>font-family</label>
                                    {{view Ember.Select
                                    prompt="--Select a font--"
                                    content=fontFamilies
                                    optionValuePath="content.font"
                                    optionLabelPath="content.title"
                                    value=props.fontfamily}}
                                </li>
                                <li><label>font-size</label> {{view Ember.TextField valueBinding="props.fontsize" action="updateFontSize" type="number"}}</li>
                                <li><label>color</label> {{view Ember.TextField valueBinding="props.color" action="updateColor"}}</li>
                                {{#unless isPanel}}
                                    <li><label>style</label>
                                        <button {{bind-attr class=":style-button :fa :fa-bold canvasElement.bold:style-selected"}} {{action updateBold}}></button>
                                        <button {{bind-attr class=":style-button :fa :fa-italic canvasElement.italic:style-selected"}} {{action updateItalic}}></button>
                                        <button {{bind-attr class=":style-button :fa :fa-underline canvasElement.underline:style-selected"}} {{action updateUnderline}}></button>
                                    </li>
                                {{/unless}}
                            </ul>
                        {{/if}}
                    </li>
                    {{#unless isText}}
                    <li class="toggle"><span {{action 'toggleBg'}} class="inner-toggle bg"><span class="background">Background</span><span class="caret"></span></span>
                        {{#if isBgExpanded}}
                            <ul>
                                <li><label>color</label> {{view Ember.TextField valueBinding="props.bgColor" action="updateBgColor"}}</li>
                                <li><label>image</label> {{view Ember.TextField valueBinding="props.bgImage" action="updateBgImage"}}</li>
                                <li><label>repeat</label>
                                    {{view Ember.Select
                                        prompt="--Select repeat --"
                                        content=repeats
                                        value=props.bgRepeat}}
                                </li>
                                <li><label>position: x</label> {{view Ember.TextField valueBinding="props.bgPositionX" action="updateBgPositionX" type="number"}}</li>
                                <li><label>position: y</label> {{view Ember.TextField valueBinding="props.bgPositionY" action="updateBgPositionY" type="number"}}</li>
                            </ul>
                        {{/if}}
                    </li>
                    {{/unless}}
                </ul>
            {{/if}}
        {{/if}}



        {{#if isEventsSelected}}

            <header class="sub-label" {{action 'toggleEvents'}}>Events</header>
                <ul class="options-list">
                    {{#each events}}
                        <li><label>{{name}}</label>
                        <button {{action setCodeView type}}>Show function</button></li>
                    {{/each}}
                </ul>
        {{/if}}

    </div>
</div>
